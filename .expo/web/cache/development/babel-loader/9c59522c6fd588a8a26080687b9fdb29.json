{"ast":null,"code":"import _objectDestructuringEmpty from \"@babel/runtime/helpers/objectDestructuringEmpty\";\n\nvar _this = this;\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { container } from \"react-native-web/dist/index\";\nimport React, { useEffect } from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport axios from \"axios\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Home = function Home(_ref) {\n  _objectDestructuringEmpty(_ref);\n\n  var _useWindowDimensions = useWindowDimensions(),\n      height = _useWindowDimensions.height;\n\n  var fetchData = function _callee() {\n    var baseURL;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            baseURL = \"https://localhost:7162/api/Elevators\";\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(axios.get(\"\" + baseURL));\n\n          case 3:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var showElevator = function _callee2() {\n    var listEmails;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(fetchData());\n\n          case 2:\n            listEmails = _context2.sent;\n            showElevator;\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      style: {\n        fontSize: 50\n      },\n      children: \"List\"\n    }), _jsx(FlatList, {\n      showElevator: _this.state.data,\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item;\n        return _jsx(Text, {\n          style: {\n            fontSize: 50\n          },\n          children: item.response.data\n        });\n      }\n    })]\n  });\n};\n\nexport default Home;","map":{"version":3,"names":["container","React","useEffect","NavigationContainer","axios","Home","useWindowDimensions","height","fetchData","baseURL","get","showElevator","listEmails","fontSize","state","data","item","response"],"sources":["C:/Users/amara/OneDrive/Desktop/Front-end/Rocket-Elevators-Mobile-React-Native/my-app/src/screens/Home.js"],"sourcesContent":["import { View, Text, Button, FlatList, container } from \"react-native\";\r\nimport React, { useEffect } from \"react\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\n// import SelectDropdown from \"react-native-material-dropdown\";\r\nimport axios from \"axios\";\r\n\r\nconst Home = ({}) => {\r\n    // const [elavator, setEmail] = useState(\"\");\r\n    // const [password, setPassword] = useState(\"\");\r\n\r\n    const { height } = useWindowDimensions();\r\n\r\n    // const getMoviesFromApiAsync = async () => {\r\n    //     try {\r\n    //         const response = await fetch(\"https://reactnative.dev/movies.json\");\r\n    //         const json = await response.json();\r\n    //         console.log(\"json:\", json);\r\n    //         return json.movies;\r\n    //     } catch (error) {\r\n    //         console.error(\"failed to fetch:\", error);\r\n    //     }\r\n    // };\r\n\r\n    // getMoviesFromApiAsync();\r\n\r\n    const fetchData = async () => {\r\n        const baseURL = `https://localhost:7162/api/Elevators`;\r\n        return await axios.get(`${baseURL}`);\r\n        // axios\r\n        //     .get(`${baseURL}`)\r\n        //     .then((response) => {\r\n        //         console.log(response.data);\r\n        //         return response.data;\r\n        //     })\r\n        //     .catch((err) => {\r\n        //         console.log(\"we have an error:\", err);\r\n        //         return false;\r\n        //     });\r\n    };\r\n    const showElevator = async () => {\r\n        const listEmails = await fetchData();\r\n        showElevator;\r\n    };\r\n\r\n    // ------------------------------------const Home = () => {\r\n    //     console.log(\"in home\");\r\n    //     const fetchData = () => {\r\n    //         console.log(\"in home----------------------------\");\r\n    //         const baseURL = \"https://localhost:7162/api/Elevators\";\r\n\r\n    //         axios\r\n    //             .get(`${baseURL}`)\r\n    //             .then((response) => {\r\n    //                 console.log(\"in home8888888888888888888\");\r\n    //                 console.log(response.data);\r\n    //             })\r\n    //             .catch((err) => console.log(\"we have an error:\", err));\r\n    //     };\r\n\r\n    //     useEffect(() => {\r\n    //         fetchData();\r\n    //  -----------------------------------------------   }, []);\r\n\r\n    // const Item = ({ item, onPress, backgroundColor, textColor }) => (\r\n    //     <TouchableOpacity onPress={onPress} style={[styles.item, backgroundColor]}>\r\n    //         <Text style={[styles.title, textColor]}>{item.title}</Text>\r\n    //     </TouchableOpacity>\r\n    // );\r\n\r\n    // Item;\r\n\r\n    return (\r\n        <View>\r\n            <Text style={{ fontSize: 50 }}>List</Text>\r\n            <FlatList\r\n                showElevator={this.state.data}\r\n                renderItem={({ item }) => <Text style={{ fontSize: 50 }}>{item.response.data}</Text>}\r\n            />\r\n        </View>\r\n        // <div>\r\n        //     {/* <h1>{fetchData}</h1> */}\r\n        //     {/* <select value={fetchData} onChange> */}\r\n        //     {/* </select> */}\r\n        //     <View style={{ backgroundColor: \"red\", height: \"100%\", width: \"100%\" }}>\r\n        //         <FlatList\r\n        //             data={[{ fetchData }]}\r\n        //             renderItem={({ item }) => <Text>{item.name}</Text>}\r\n        //             keyExtractor={(item, index) => index.toString()}\r\n        //         />\r\n\r\n        //         {/* <FlatList data={[fetchData]}> Liste of Elevator </FlatList> */}\r\n        //         {/* <getMoviesFromApi /> */}\r\n        //         {/* <FlatList data={[fetchData]} /> */}\r\n        //     </View>\r\n        // </div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":";;;;;;;;;SAAuCA,S;AACvC,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAAQ;EAAA;;EAIjB,2BAAmBC,mBAAmB,EAAtC;EAAA,IAAQC,MAAR,wBAAQA,MAAR;;EAeA,IAAMC,SAAS,GAAG;IAAA;IAAA;MAAA;QAAA;UAAA;YACRC,OADQ;YAAA;YAAA,iCAEDL,KAAK,CAACM,GAAN,MAAaD,OAAb,CAFC;;UAAA;YAAA;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAlB;;EAcA,IAAME,YAAY,GAAG;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,iCACQH,SAAS,EADjB;;UAAA;YACXI,UADW;YAEjBD,YAAY;;UAFK;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAArB;;EAgCA,OACI,MAAC,IAAD;IAAA,WACI,KAAC,IAAD;MAAM,KAAK,EAAE;QAAEE,QAAQ,EAAE;MAAZ,CAAb;MAAA;IAAA,EADJ,EAEI,KAAC,QAAD;MACI,YAAY,EAAE,KAAI,CAACC,KAAL,CAAWC,IAD7B;MAEI,UAAU,EAAE;QAAA,IAAGC,IAAH,SAAGA,IAAH;QAAA,OAAc,KAAC,IAAD;UAAM,KAAK,EAAE;YAAEH,QAAQ,EAAE;UAAZ,CAAb;UAAA,UAAgCG,IAAI,CAACC,QAAL,CAAcF;QAA9C,EAAd;MAAA;IAFhB,EAFJ;EAAA,EADJ;AAyBH,CA1FD;;AA4FA,eAAeV,IAAf"},"metadata":{},"sourceType":"module"}