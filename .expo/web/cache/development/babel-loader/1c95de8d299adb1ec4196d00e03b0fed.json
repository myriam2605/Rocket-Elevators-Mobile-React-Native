{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport React from \"react\";\nimport Home from \"./Home\";\nimport axios from \"axios\";\nimport Login from \"./Login\";\nimport CustomButton from \"../components/CustomButton\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar Status = function Status(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  var _route$params = route.params,\n      itemId = _route$params.itemId,\n      itemStatus = _route$params.itemStatus;\n  console.log(\"test login :\", itemId, itemStatus);\n  return _jsxs(View, {\n    children: [_jsxs(Text, {\n      children: [\"Elevator ID: \", itemId]\n    }), _jsxs(Text, {\n      children: [\"Elevator Status: \", itemStatus]\n    }), _jsx(CustomButton, {\n      text: \"Change status\",\n      onPress: function onPress() {\n        return putvals(itemId);\n      }\n    })]\n  });\n};\n\nvar putvals = function _callee(itemID) {\n  var response;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch(\"https://rocketelevator.me/api/elevators/update/active/\" + itemID, {\n            method: \"PUT\",\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\"\n            }\n          }));\n\n        case 2:\n          response = _context.sent;\n          console.log(response);\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Status;","map":{"version":3,"names":["React","Home","axios","Login","CustomButton","NavigationContainer","Status","route","navigation","params","itemId","itemStatus","console","log","putvals","itemID","fetch","method","headers","Accept","response"],"sources":["C:/Users/amara/OneDrive/Desktop/Front-end/Rocket-Elevators-Mobile-React-Native/my-app/src/screens/Status.js"],"sourcesContent":["import { View, Text, Button } from \"react-native\";\r\nimport React from \"react\";\r\nimport Home from \"./Home\";\r\nimport axios from \"axios\";\r\nimport Login from \"./Login\";\r\nimport CustomButton from \"../components/CustomButton\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\n\r\nconst Status = ({ route, navigation }) => {\r\n    /* 2. Get the param */\r\n    const { itemId, itemStatus } = route.params;\r\n\r\n    console.log(\"test login :\", itemId, itemStatus);\r\n    return (\r\n        <View>\r\n            <Text>Elevator ID: {itemId}</Text>\r\n            <Text>Elevator Status: {itemStatus}</Text>\r\n\r\n            <CustomButton text=\"Change status\" onPress={() => putvals(itemId)} />\r\n            {/* <button>\r\n                {\" Change Status\"}\r\n                {/* <Text></Text> */}\r\n            {/* </button> */}\r\n        </View>\r\n    );\r\n};\r\n\r\n// fetch(\"https://rocketelevator.me/api/elevators/update/active\", {\r\n//     method: \"PUT\",\r\n//     headers: {\r\n//         Accept: \"application/json\",\r\n//         \"Content-Type\": \"application/json\",\r\n//     },\r\n//     body: JSON.stringify({\r\n//         firstParam: \"status\",\r\n//     }),\r\n\r\n// });\r\n// const element = document.querySelector(\"#put-request .date-updated\");\r\n\r\n// const requestOptions = {\r\n//     method: \"PUT\",\r\n//     headers: { \"Content-Type\": \"application/json\" },\r\n//     body: JSON.stringify({ title: \"Fetch PUT Request Example\" }),\r\n// };\r\n// fetch(\"https://rocketelevator.me/api/elevators/update/active\", requestOptions)\r\n//     .then((response) => response.json())\r\n//     .then((data) => (element.innerHTML = data.updatedAt));\r\n// console.log(\"tessssssssssssssssssssssssssst\");\r\n\r\nconst putvals = async (itemID) => {\r\n    let response = await fetch(`https://rocketelevator.me/api/elevators/update/active/${itemID}`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n    });\r\n    console.log(response);\r\n};\r\n\r\n// putvals().then((response) => console.log(response));\r\n\r\nexport default Status;\r\n"],"mappings":";;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP;AACA,OAAOC,YAAP;AACA,SAASC,mBAAT,QAAoC,0BAApC;;;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,OAA2B;EAAA,IAAxBC,KAAwB,QAAxBA,KAAwB;EAAA,IAAjBC,UAAiB,QAAjBA,UAAiB;EAEtC,oBAA+BD,KAAK,CAACE,MAArC;EAAA,IAAQC,MAAR,iBAAQA,MAAR;EAAA,IAAgBC,UAAhB,iBAAgBA,UAAhB;EAEAC,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BH,MAA5B,EAAoCC,UAApC;EACA,OACI,MAAC,IAAD;IAAA,WACI,MAAC,IAAD;MAAA,4BAAoBD,MAApB;IAAA,EADJ,EAEI,MAAC,IAAD;MAAA,gCAAwBC,UAAxB;IAAA,EAFJ,EAII,KAAC,YAAD;MAAc,IAAI,EAAC,eAAnB;MAAmC,OAAO,EAAE;QAAA,OAAMG,OAAO,CAACJ,MAAD,CAAb;MAAA;IAA5C,EAJJ;EAAA,EADJ;AAYH,CAjBD;;AA0CA,IAAMI,OAAO,GAAG,iBAAOC,MAAP;EAAA;EAAA;IAAA;MAAA;QAAA;UAAA;UAAA,iCACSC,KAAK,4DAA0DD,MAA1D,EAAoE;YAC1FE,MAAM,EAAE,KADkF;YAE1FC,OAAO,EAAE;cACLC,MAAM,EAAE,kBADH;cAEL,gBAAgB;YAFX;UAFiF,CAApE,CADd;;QAAA;UACRC,QADQ;UAQZR,OAAO,CAACC,GAAR,CAAYO,QAAZ;;QARY;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA,CAAhB;;AAaA,eAAed,MAAf"},"metadata":{},"sourceType":"module"}