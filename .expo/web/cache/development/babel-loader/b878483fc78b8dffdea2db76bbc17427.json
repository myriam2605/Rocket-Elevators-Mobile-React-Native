{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"style\", \"label\", \"title\", \"value\", \"defaultValue\", \"characterRestriction\", \"editable\", \"disabled\", \"disabledLineType\", \"disabledLineWidth\", \"animationDuration\", \"fontSize\", \"titleFontSize\", \"labelFontSize\", \"labelHeight\", \"labelPadding\", \"inputContainerPadding\", \"labelTextStyle\", \"titleTextStyle\", \"tintColor\", \"baseColor\", \"textColor\", \"errorColor\", \"lineWidth\", \"activeLineWidth\", \"containerStyle\", \"inputContainerStyle\", \"clearTextOnFocus\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport PropTypes from 'prop-types';\nimport React, { PureComponent } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { ViewPropTypes } from \"react-native-web/dist/index\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport RN from 'react-native/package.json';\nimport Line from \"../line\";\nimport Label from \"../label\";\nimport Affix from \"../affix\";\nimport Helper from \"../helper\";\nimport Counter from \"../counter\";\nimport styles from \"./styles.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar TextField = function (_PureComponent) {\n  _inherits(TextField, _PureComponent);\n\n  var _super = _createSuper(TextField);\n\n  function TextField(props) {\n    var _this;\n\n    _classCallCheck(this, TextField);\n\n    _this = _super.call(this, props);\n    _this.onBlur = _this.onBlur.bind(_assertThisInitialized(_this));\n    _this.onFocus = _this.onFocus.bind(_assertThisInitialized(_this));\n    _this.onPress = _this.focus.bind(_assertThisInitialized(_this));\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_this));\n    _this.onChangeText = _this.onChangeText.bind(_assertThisInitialized(_this));\n    _this.onContentSizeChange = _this.onContentSizeChange.bind(_assertThisInitialized(_this));\n    _this.onFocusAnimationEnd = _this.onFocusAnimationEnd.bind(_assertThisInitialized(_this));\n    _this.updateRef = _this.updateRef.bind(_assertThisInitialized(_this), 'input');\n    var _this$props = _this.props,\n        value = _this$props.value,\n        error = _this$props.error,\n        fontSize = _this$props.fontSize;\n    _this.mounted = false;\n    _this.state = {\n      text: value,\n      focus: new Animated.Value(_this.focusState(error, false)),\n      focused: false,\n      receivedFocus: false,\n      error: error,\n      errored: !!error,\n      height: fontSize * 1.5\n    };\n    return _this;\n  }\n\n  _createClass(TextField, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(props) {\n      var error = this.state.error;\n\n      if (null != props.value) {\n        this.setState({\n          text: props.value\n        });\n      }\n\n      if (props.error && props.error !== error) {\n        this.setState({\n          error: props.error\n        });\n      }\n\n      if (props.error !== this.props.error) {\n        this.setState({\n          errored: !!props.error\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.mounted = true;\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.mounted = false;\n    }\n  }, {\n    key: \"componentWillUpdate\",\n    value: function componentWillUpdate(props, state) {\n      var _this$props2 = this.props,\n          error = _this$props2.error,\n          duration = _this$props2.animationDuration;\n      var _this$state = this.state,\n          focus = _this$state.focus,\n          focused = _this$state.focused;\n\n      if (props.error !== error || focused ^ state.focused) {\n        var toValue = this.focusState(props.error, state.focused);\n        Animated.timing(focus, {\n          toValue: toValue,\n          duration: duration\n        }).start(this.onFocusAnimationEnd);\n      }\n    }\n  }, {\n    key: \"updateRef\",\n    value: function updateRef(name, ref) {\n      this[name] = ref;\n    }\n  }, {\n    key: \"focusState\",\n    value: function focusState(error, focused) {\n      return error ? -1 : focused ? 1 : 0;\n    }\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      var _this$props3 = this.props,\n          disabled = _this$props3.disabled,\n          editable = _this$props3.editable;\n\n      if (!disabled && editable) {\n        this.input.focus();\n      }\n    }\n  }, {\n    key: \"blur\",\n    value: function blur() {\n      this.input.blur();\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.input.clear();\n      this.onChangeText('');\n    }\n  }, {\n    key: \"value\",\n    value: function value() {\n      var _this$state2 = this.state,\n          text = _this$state2.text,\n          receivedFocus = _this$state2.receivedFocus;\n      var _this$props4 = this.props,\n          value = _this$props4.value,\n          defaultValue = _this$props4.defaultValue;\n      return receivedFocus || null != value || null == defaultValue ? text : defaultValue;\n    }\n  }, {\n    key: \"isFocused\",\n    value: function isFocused() {\n      return this.input.isFocused();\n    }\n  }, {\n    key: \"isRestricted\",\n    value: function isRestricted() {\n      var characterRestriction = this.props.characterRestriction;\n      var _this$state$text = this.state.text,\n          text = _this$state$text === void 0 ? '' : _this$state$text;\n      return characterRestriction < text.length;\n    }\n  }, {\n    key: \"onFocus\",\n    value: function onFocus(event) {\n      var _this$props5 = this.props,\n          onFocus = _this$props5.onFocus,\n          clearTextOnFocus = _this$props5.clearTextOnFocus;\n\n      if ('function' === typeof onFocus) {\n        onFocus(event);\n      }\n\n      if (clearTextOnFocus) {\n        this.clear();\n      }\n\n      this.setState({\n        focused: true,\n        receivedFocus: true\n      });\n    }\n  }, {\n    key: \"onBlur\",\n    value: function onBlur(event) {\n      var onBlur = this.props.onBlur;\n\n      if ('function' === typeof onBlur) {\n        onBlur(event);\n      }\n\n      this.setState({\n        focused: false\n      });\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(event) {\n      var _this$props6 = this.props,\n          onChange = _this$props6.onChange,\n          multiline = _this$props6.multiline;\n\n      if ('function' === typeof onChange) {\n        onChange(event);\n      }\n\n      if (multiline && 'android' === Platform.OS) {\n        if (/^0\\.4[45]\\./.test(RN.version)) {\n          this.onContentSizeChange(event);\n        }\n      }\n    }\n  }, {\n    key: \"onChangeText\",\n    value: function onChangeText(text) {\n      var onChangeText = this.props.onChangeText;\n      this.setState({\n        text: text\n      });\n\n      if ('function' === typeof onChangeText) {\n        onChangeText(text);\n      }\n    }\n  }, {\n    key: \"onContentSizeChange\",\n    value: function onContentSizeChange(event) {\n      var _this$props7 = this.props,\n          onContentSizeChange = _this$props7.onContentSizeChange,\n          fontSize = _this$props7.fontSize;\n      var height = event.nativeEvent.contentSize.height;\n\n      if ('function' === typeof onContentSizeChange) {\n        onContentSizeChange(event);\n      }\n\n      this.setState({\n        height: Math.max(fontSize * 1.5, Math.ceil(height) + Platform.select({\n          ios: 5,\n          android: 1\n        }))\n      });\n    }\n  }, {\n    key: \"onFocusAnimationEnd\",\n    value: function onFocusAnimationEnd() {\n      if (this.mounted) {\n        this.setState(function (state, _ref) {\n          var error = _ref.error;\n          return {\n            error: error\n          };\n        });\n      }\n    }\n  }, {\n    key: \"renderAccessory\",\n    value: function renderAccessory() {\n      var renderAccessory = this.props.renderAccessory;\n\n      if ('function' !== typeof renderAccessory) {\n        return null;\n      }\n\n      return _jsx(View, {\n        style: styles.accessory,\n        children: renderAccessory()\n      });\n    }\n  }, {\n    key: \"renderAffix\",\n    value: function renderAffix(type, active, focused) {\n      var _this$props8 = this.props,\n          affix = _this$props8[type],\n          fontSize = _this$props8.fontSize,\n          baseColor = _this$props8.baseColor,\n          animationDuration = _this$props8.animationDuration,\n          affixTextStyle = _this$props8.affixTextStyle;\n\n      if (null == affix) {\n        return null;\n      }\n\n      var props = {\n        type: type,\n        active: active,\n        focused: focused,\n        fontSize: fontSize,\n        baseColor: baseColor,\n        animationDuration: animationDuration\n      };\n      return _jsx(Affix, _objectSpread(_objectSpread({\n        style: affixTextStyle\n      }, props), {}, {\n        children: affix\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state3 = this.state,\n          receivedFocus = _this$state3.receivedFocus,\n          focus = _this$state3.focus,\n          focused = _this$state3.focused,\n          error = _this$state3.error,\n          errored = _this$state3.errored,\n          height = _this$state3.height,\n          _this$state3$text = _this$state3.text,\n          text = _this$state3$text === void 0 ? '' : _this$state3$text;\n\n      var _this$props9 = this.props,\n          inputStyleOverrides = _this$props9.style,\n          label = _this$props9.label,\n          title = _this$props9.title,\n          value = _this$props9.value,\n          defaultValue = _this$props9.defaultValue,\n          limit = _this$props9.characterRestriction,\n          editable = _this$props9.editable,\n          disabled = _this$props9.disabled,\n          disabledLineType = _this$props9.disabledLineType,\n          disabledLineWidth = _this$props9.disabledLineWidth,\n          animationDuration = _this$props9.animationDuration,\n          fontSize = _this$props9.fontSize,\n          titleFontSize = _this$props9.titleFontSize,\n          labelFontSize = _this$props9.labelFontSize,\n          labelHeight = _this$props9.labelHeight,\n          labelPadding = _this$props9.labelPadding,\n          inputContainerPadding = _this$props9.inputContainerPadding,\n          labelTextStyle = _this$props9.labelTextStyle,\n          titleTextStyle = _this$props9.titleTextStyle,\n          tintColor = _this$props9.tintColor,\n          baseColor = _this$props9.baseColor,\n          textColor = _this$props9.textColor,\n          errorColor = _this$props9.errorColor,\n          lineWidth = _this$props9.lineWidth,\n          activeLineWidth = _this$props9.activeLineWidth,\n          containerStyle = _this$props9.containerStyle,\n          inputContainerStyleOverrides = _this$props9.inputContainerStyle,\n          clearTextOnFocus = _this$props9.clearTextOnFocus,\n          props = _objectWithoutProperties(_this$props9, _excluded);\n\n      if (props.multiline && props.height) {\n        height = props.height;\n      }\n\n      var defaultVisible = !(receivedFocus || null != value || null == defaultValue);\n      value = defaultVisible ? defaultValue : text;\n      var active = !!(value || props.placeholder);\n      var count = value.length;\n      var restricted = limit < count;\n      var textAlign = I18nManager.isRTL ? 'right' : 'left';\n      var borderBottomColor = restricted ? errorColor : focus.interpolate({\n        inputRange: [-1, 0, 1],\n        outputRange: [errorColor, baseColor, tintColor]\n      });\n      var borderBottomWidth = restricted ? activeLineWidth : focus.interpolate({\n        inputRange: [-1, 0, 1],\n        outputRange: [activeLineWidth, lineWidth, activeLineWidth]\n      });\n\n      var inputContainerStyle = _objectSpread(_objectSpread({\n        paddingTop: labelHeight,\n        paddingBottom: inputContainerPadding\n      }, disabled ? {\n        overflow: 'hidden'\n      } : {\n        borderBottomColor: borderBottomColor,\n        borderBottomWidth: borderBottomWidth\n      }), props.multiline ? {\n        height: 'web' === Platform.OS ? 'auto' : labelHeight + inputContainerPadding + height\n      } : {\n        height: labelHeight + inputContainerPadding + fontSize * 1.5\n      });\n\n      var inputStyle = _objectSpread({\n        fontSize: fontSize,\n        textAlign: textAlign,\n        color: disabled || defaultVisible ? baseColor : textColor\n      }, props.multiline ? _objectSpread({\n        height: fontSize * 1.5 + height\n      }, Platform.select({\n        ios: {\n          top: -1\n        },\n        android: {\n          textAlignVertical: 'top'\n        }\n      })) : {\n        height: fontSize * 1.5\n      });\n\n      var errorStyle = {\n        color: errorColor,\n        opacity: focus.interpolate({\n          inputRange: [-1, 0, 1],\n          outputRange: [1, 0, 0]\n        }),\n        fontSize: title ? titleFontSize : focus.interpolate({\n          inputRange: [-1, 0, 1],\n          outputRange: [titleFontSize, 0, 0]\n        })\n      };\n      var titleStyle = {\n        color: baseColor,\n        opacity: focus.interpolate({\n          inputRange: [-1, 0, 1],\n          outputRange: [0, 1, 1]\n        }),\n        fontSize: titleFontSize\n      };\n      var helperContainerStyle = {\n        flexDirection: 'row',\n        height: title || limit ? titleFontSize * 2 : focus.interpolate({\n          inputRange: [-1, 0, 1],\n          outputRange: [titleFontSize * 2, 8, 8]\n        })\n      };\n      var containerProps = {\n        style: containerStyle,\n        onStartShouldSetResponder: function onStartShouldSetResponder() {\n          return true;\n        },\n        onResponderRelease: this.onPress,\n        pointerEvents: !disabled && editable ? 'auto' : 'none'\n      };\n      var inputContainerProps = {\n        style: [styles.inputContainer, inputContainerStyle, inputContainerStyleOverrides]\n      };\n      var lineProps = {\n        type: disabledLineType,\n        width: disabledLineWidth,\n        color: baseColor\n      };\n      var labelProps = {\n        baseSize: labelHeight,\n        basePadding: labelPadding,\n        fontSize: fontSize,\n        activeFontSize: labelFontSize,\n        tintColor: tintColor,\n        baseColor: baseColor,\n        errorColor: errorColor,\n        animationDuration: animationDuration,\n        active: active,\n        focused: focused,\n        errored: errored,\n        restricted: restricted,\n        style: labelTextStyle\n      };\n      var counterProps = {\n        baseColor: baseColor,\n        errorColor: errorColor,\n        count: count,\n        limit: limit,\n        fontSize: titleFontSize,\n        style: titleTextStyle\n      };\n      return _jsxs(View, _objectSpread(_objectSpread({}, containerProps), {}, {\n        children: [_jsxs(Animated.View, _objectSpread(_objectSpread({}, inputContainerProps), {}, {\n          children: [disabled && _jsx(Line, _objectSpread({}, lineProps)), _jsx(Label, _objectSpread(_objectSpread({}, labelProps), {}, {\n            children: label\n          })), _jsxs(View, {\n            style: styles.row,\n            children: [this.renderAffix('prefix', active, focused), _jsx(TextInput, _objectSpread(_objectSpread({\n              style: [styles.input, inputStyle, inputStyleOverrides],\n              selectionColor: tintColor\n            }, props), {}, {\n              editable: !disabled && editable,\n              onChange: this.onChange,\n              onChangeText: this.onChangeText,\n              onContentSizeChange: this.onContentSizeChange,\n              onFocus: this.onFocus,\n              onBlur: this.onBlur,\n              value: value,\n              ref: this.updateRef\n            })), this.renderAffix('suffix', active, focused), this.renderAccessory()]\n          })]\n        })), _jsxs(Animated.View, {\n          style: helperContainerStyle,\n          children: [_jsxs(View, {\n            style: styles.flex,\n            children: [_jsx(Helper, {\n              style: [errorStyle, titleTextStyle],\n              children: error\n            }), _jsx(Helper, {\n              style: [titleStyle, titleTextStyle],\n              children: title\n            })]\n          }), _jsx(Counter, _objectSpread({}, counterProps))]\n        })]\n      }));\n    }\n  }]);\n\n  return TextField;\n}(PureComponent);\n\nTextField.defaultProps = {\n  underlineColorAndroid: 'transparent',\n  disableFullscreenUI: true,\n  autoCapitalize: 'sentences',\n  editable: true,\n  animationDuration: 225,\n  fontSize: 16,\n  titleFontSize: 12,\n  labelFontSize: 12,\n  labelHeight: 32,\n  labelPadding: 4,\n  inputContainerPadding: 8,\n  tintColor: 'rgb(0, 145, 234)',\n  textColor: 'rgba(0, 0, 0, .87)',\n  baseColor: 'rgba(0, 0, 0, .38)',\n  errorColor: 'rgb(213, 0, 0)',\n  lineWidth: StyleSheet.hairlineWidth,\n  activeLineWidth: 2,\n  disabled: false,\n  disabledLineType: 'dotted',\n  disabledLineWidth: 1\n};\nTextField.propTypes = _objectSpread(_objectSpread({}, TextInput.propTypes), {}, {\n  animationDuration: PropTypes.number,\n  fontSize: PropTypes.number,\n  titleFontSize: PropTypes.number,\n  labelFontSize: PropTypes.number,\n  labelHeight: PropTypes.number,\n  labelPadding: PropTypes.number,\n  inputContainerPadding: PropTypes.number,\n  labelTextStyle: Text.propTypes.style,\n  titleTextStyle: Text.propTypes.style,\n  affixTextStyle: Text.propTypes.style,\n  tintColor: PropTypes.string,\n  textColor: PropTypes.string,\n  baseColor: PropTypes.string,\n  label: PropTypes.string.isRequired,\n  title: PropTypes.string,\n  characterRestriction: PropTypes.number,\n  error: PropTypes.string,\n  errorColor: PropTypes.string,\n  lineWidth: PropTypes.number,\n  activeLineWidth: PropTypes.number,\n  disabled: PropTypes.bool,\n  disabledLineType: Line.propTypes.type,\n  disabledLineWidth: PropTypes.number,\n  renderAccessory: PropTypes.func,\n  prefix: PropTypes.string,\n  suffix: PropTypes.string,\n  containerStyle: (ViewPropTypes || View.propTypes).style,\n  inputContainerStyle: (ViewPropTypes || View.propTypes).style\n});\nexport { TextField as default };","map":{"version":3,"names":["PropTypes","React","PureComponent","ViewPropTypes","RN","Line","Label","Affix","Helper","Counter","styles","TextField","props","onBlur","bind","onFocus","onPress","focus","onChange","onChangeText","onContentSizeChange","onFocusAnimationEnd","updateRef","value","error","fontSize","mounted","state","text","Animated","Value","focusState","focused","receivedFocus","errored","height","setState","duration","animationDuration","toValue","timing","start","name","ref","disabled","editable","input","blur","clear","defaultValue","isFocused","characterRestriction","length","event","clearTextOnFocus","multiline","Platform","OS","test","version","nativeEvent","contentSize","Math","max","ceil","select","ios","android","renderAccessory","accessory","type","active","affix","baseColor","affixTextStyle","inputStyleOverrides","style","label","title","limit","disabledLineType","disabledLineWidth","titleFontSize","labelFontSize","labelHeight","labelPadding","inputContainerPadding","labelTextStyle","titleTextStyle","tintColor","textColor","errorColor","lineWidth","activeLineWidth","containerStyle","inputContainerStyleOverrides","inputContainerStyle","defaultVisible","placeholder","count","restricted","textAlign","I18nManager","isRTL","borderBottomColor","interpolate","inputRange","outputRange","borderBottomWidth","paddingTop","paddingBottom","overflow","inputStyle","color","top","textAlignVertical","errorStyle","opacity","titleStyle","helperContainerStyle","flexDirection","containerProps","onStartShouldSetResponder","onResponderRelease","pointerEvents","inputContainerProps","inputContainer","lineProps","width","labelProps","baseSize","basePadding","activeFontSize","counterProps","row","renderAffix","flex","defaultProps","underlineColorAndroid","disableFullscreenUI","autoCapitalize","StyleSheet","hairlineWidth","propTypes","TextInput","number","Text","string","isRequired","bool","func","prefix","suffix","View"],"sources":["C:/Users/amara/OneDrive/Desktop/Front-end/Rocket-Elevators-Mobile-React-Native/my-app/node_modules/react-native-material-textfield/src/components/field/index.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport React, { PureComponent } from 'react';\nimport {\n  View,\n  Text,\n  TextInput,\n  Animated,\n  StyleSheet,\n  Platform,\n  ViewPropTypes,\n  I18nManager,\n} from 'react-native';\n\nimport RN from 'react-native/package.json';\n\nimport Line from '../line';\nimport Label from '../label';\nimport Affix from '../affix';\nimport Helper from '../helper';\nimport Counter from '../counter';\n\nimport styles from './styles.js';\n\nexport default class TextField extends PureComponent {\n  static defaultProps = {\n    underlineColorAndroid: 'transparent',\n    disableFullscreenUI: true,\n    autoCapitalize: 'sentences',\n    editable: true,\n\n    animationDuration: 225,\n\n    fontSize: 16,\n    titleFontSize: 12,\n    labelFontSize: 12,\n    labelHeight: 32,\n    labelPadding: 4,\n    inputContainerPadding: 8,\n\n    tintColor: 'rgb(0, 145, 234)',\n    textColor: 'rgba(0, 0, 0, .87)',\n    baseColor: 'rgba(0, 0, 0, .38)',\n\n    errorColor: 'rgb(213, 0, 0)',\n\n    lineWidth: StyleSheet.hairlineWidth,\n    activeLineWidth: 2,\n\n    disabled: false,\n    disabledLineType: 'dotted',\n    disabledLineWidth: 1,\n  };\n\n  static propTypes = {\n    ...TextInput.propTypes,\n\n    animationDuration: PropTypes.number,\n\n    fontSize: PropTypes.number,\n    titleFontSize: PropTypes.number,\n    labelFontSize: PropTypes.number,\n    labelHeight: PropTypes.number,\n    labelPadding: PropTypes.number,\n    inputContainerPadding: PropTypes.number,\n\n    labelTextStyle: Text.propTypes.style,\n    titleTextStyle: Text.propTypes.style,\n    affixTextStyle: Text.propTypes.style,\n\n    tintColor: PropTypes.string,\n    textColor: PropTypes.string,\n    baseColor: PropTypes.string,\n\n    label: PropTypes.string.isRequired,\n    title: PropTypes.string,\n\n    characterRestriction: PropTypes.number,\n\n    error: PropTypes.string,\n    errorColor: PropTypes.string,\n\n    lineWidth: PropTypes.number,\n    activeLineWidth: PropTypes.number,\n\n    disabled: PropTypes.bool,\n    disabledLineType: Line.propTypes.type,\n    disabledLineWidth: PropTypes.number,\n\n    renderAccessory: PropTypes.func,\n\n    prefix: PropTypes.string,\n    suffix: PropTypes.string,\n\n    containerStyle: (ViewPropTypes || View.propTypes).style,\n    inputContainerStyle: (ViewPropTypes || View.propTypes).style,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.onBlur = this.onBlur.bind(this);\n    this.onFocus = this.onFocus.bind(this);\n    this.onPress = this.focus.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.onChangeText = this.onChangeText.bind(this);\n    this.onContentSizeChange = this.onContentSizeChange.bind(this);\n    this.onFocusAnimationEnd = this.onFocusAnimationEnd.bind(this);\n\n    this.updateRef = this.updateRef.bind(this, 'input');\n\n    let { value, error, fontSize } = this.props;\n\n    this.mounted = false;\n    this.state = {\n      text: value,\n\n      focus: new Animated.Value(this.focusState(error, false)),\n      focused: false,\n      receivedFocus: false,\n\n      error: error,\n      errored: !!error,\n\n      height: fontSize * 1.5,\n    };\n  }\n\n  componentWillReceiveProps(props) {\n    let { error } = this.state;\n\n    if (null != props.value) {\n      this.setState({ text: props.value });\n    }\n\n    if (props.error && props.error !== error) {\n      this.setState({ error: props.error });\n    }\n\n    if (props.error !== this.props.error) {\n      this.setState({ errored: !!props.error });\n    }\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  componentWillUpdate(props, state) {\n    let { error, animationDuration: duration } = this.props;\n    let { focus, focused } = this.state;\n\n    if (props.error !== error || focused ^ state.focused) {\n      let toValue = this.focusState(props.error, state.focused);\n\n      Animated\n        .timing(focus, { toValue, duration })\n        .start(this.onFocusAnimationEnd);\n    }\n  }\n\n  updateRef(name, ref) {\n    this[name] = ref;\n  }\n\n  focusState(error, focused) {\n    return error? -1 : (focused? 1 : 0);\n  }\n\n  focus() {\n    let { disabled, editable } = this.props;\n\n    if (!disabled && editable) {\n      this.input.focus();\n    }\n  }\n\n  blur() {\n    this.input.blur();\n  }\n\n  clear() {\n    this.input.clear();\n\n    /* onChangeText is not triggered by .clear() */\n    this.onChangeText('');\n  }\n\n  value() {\n    let { text, receivedFocus } = this.state;\n    let { value, defaultValue } = this.props;\n\n    return (receivedFocus || null != value || null == defaultValue)?\n      text:\n      defaultValue;\n  }\n\n  isFocused() {\n    return this.input.isFocused();\n  }\n\n  isRestricted() {\n    let { characterRestriction } = this.props;\n    let { text = '' } = this.state;\n\n    return characterRestriction < text.length;\n  }\n\n  onFocus(event) {\n    let { onFocus, clearTextOnFocus } = this.props;\n\n    if ('function' === typeof onFocus) {\n      onFocus(event);\n    }\n\n    if (clearTextOnFocus) {\n      this.clear();\n    }\n\n    this.setState({ focused: true, receivedFocus: true });\n  }\n\n  onBlur(event) {\n    let { onBlur } = this.props;\n\n    if ('function' === typeof onBlur) {\n      onBlur(event);\n    }\n\n    this.setState({ focused: false });\n  }\n\n  onChange(event) {\n    let { onChange, multiline } = this.props;\n\n    if ('function' === typeof onChange) {\n      onChange(event);\n    }\n\n    /* XXX: onContentSizeChange is not called on RN 0.44 and 0.45 */\n    if (multiline && 'android' === Platform.OS) {\n      if (/^0\\.4[45]\\./.test(RN.version)) {\n        this.onContentSizeChange(event);\n      }\n    }\n  }\n\n  onChangeText(text) {\n    let { onChangeText } = this.props;\n\n    this.setState({ text });\n\n    if ('function' === typeof onChangeText) {\n      onChangeText(text);\n    }\n  }\n\n  onContentSizeChange(event) {\n    let { onContentSizeChange, fontSize } = this.props;\n    let { height } = event.nativeEvent.contentSize;\n\n    if ('function' === typeof onContentSizeChange) {\n      onContentSizeChange(event);\n    }\n\n    this.setState({\n      height: Math.max(\n        fontSize * 1.5,\n        Math.ceil(height) + Platform.select({ ios: 5, android: 1 })\n      ),\n    });\n  }\n\n  onFocusAnimationEnd() {\n    if (this.mounted) {\n      this.setState((state, { error }) => ({ error }));\n    }\n  }\n\n  renderAccessory() {\n    let { renderAccessory } = this.props;\n\n    if ('function' !== typeof renderAccessory) {\n      return null;\n    }\n\n    return (\n      <View style={styles.accessory}>\n        {renderAccessory()}\n      </View>\n    );\n  }\n\n  renderAffix(type, active, focused) {\n    let {\n      [type]: affix,\n      fontSize,\n      baseColor,\n      animationDuration,\n      affixTextStyle,\n    } = this.props;\n\n    if (null == affix) {\n      return null;\n    }\n\n    let props = {\n      type,\n      active,\n      focused,\n      fontSize,\n      baseColor,\n      animationDuration,\n    };\n\n    return (\n      <Affix style={affixTextStyle} {...props}>{affix}</Affix>\n    );\n  }\n\n  render() {\n    let { receivedFocus, focus, focused, error, errored, height, text = '' } = this.state;\n    let {\n      style: inputStyleOverrides,\n      label,\n      title,\n      value,\n      defaultValue,\n      characterRestriction: limit,\n      editable,\n      disabled,\n      disabledLineType,\n      disabledLineWidth,\n      animationDuration,\n      fontSize,\n      titleFontSize,\n      labelFontSize,\n      labelHeight,\n      labelPadding,\n      inputContainerPadding,\n      labelTextStyle,\n      titleTextStyle,\n      tintColor,\n      baseColor,\n      textColor,\n      errorColor,\n      lineWidth,\n      activeLineWidth,\n      containerStyle,\n      inputContainerStyle: inputContainerStyleOverrides,\n      clearTextOnFocus,\n      ...props\n    } = this.props;\n\n    if (props.multiline && props.height) {\n      /* Disable autogrow if height is passed as prop */\n      height = props.height;\n    }\n\n    let defaultVisible = !(receivedFocus || null != value || null == defaultValue);\n\n    value = defaultVisible?\n      defaultValue:\n      text;\n\n    let active = !!(value || props.placeholder);\n    let count = value.length;\n    let restricted = limit < count;\n\n    let textAlign = I18nManager.isRTL?\n      'right':\n      'left';\n\n    let borderBottomColor = restricted?\n      errorColor:\n      focus.interpolate({\n        inputRange: [-1, 0, 1],\n        outputRange: [errorColor, baseColor, tintColor],\n      });\n\n    let borderBottomWidth = restricted?\n      activeLineWidth:\n      focus.interpolate({\n        inputRange: [-1, 0, 1],\n        outputRange: [activeLineWidth, lineWidth, activeLineWidth],\n      });\n\n    let inputContainerStyle = {\n      paddingTop: labelHeight,\n      paddingBottom: inputContainerPadding,\n\n      ...(disabled?\n        { overflow: 'hidden' }:\n        { borderBottomColor, borderBottomWidth }),\n\n      ...(props.multiline?\n        { height: 'web' === Platform.OS ? 'auto' : labelHeight + inputContainerPadding + height }:\n        { height: labelHeight + inputContainerPadding + fontSize * 1.5 }),\n    };\n\n    let inputStyle = {\n      fontSize,\n      textAlign,\n\n      color: (disabled || defaultVisible)?\n        baseColor:\n        textColor,\n\n      ...(props.multiline?\n        {\n          height: fontSize * 1.5 + height,\n\n          ...Platform.select({\n            ios: { top: -1 },\n            android: { textAlignVertical: 'top' },\n          }),\n        }:\n        { height: fontSize * 1.5 }),\n    };\n\n    let errorStyle = {\n      color: errorColor,\n\n      opacity: focus.interpolate({\n        inputRange: [-1, 0, 1],\n        outputRange: [1, 0, 0],\n      }),\n\n      fontSize: title?\n        titleFontSize:\n        focus.interpolate({\n          inputRange:  [-1, 0, 1],\n          outputRange: [titleFontSize, 0, 0],\n        }),\n    };\n\n    let titleStyle = {\n      color: baseColor,\n\n      opacity: focus.interpolate({\n        inputRange: [-1, 0, 1],\n        outputRange: [0, 1, 1],\n      }),\n\n      fontSize: titleFontSize,\n    };\n\n    let helperContainerStyle = {\n      flexDirection: 'row',\n      height: (title || limit)?\n        titleFontSize * 2:\n        focus.interpolate({\n          inputRange:  [-1, 0, 1],\n          outputRange: [titleFontSize * 2, 8, 8],\n        }),\n    };\n\n    let containerProps = {\n      style: containerStyle,\n      onStartShouldSetResponder: () => true,\n      onResponderRelease: this.onPress,\n      pointerEvents: !disabled && editable?\n        'auto':\n        'none',\n    };\n\n    let inputContainerProps = {\n      style: [\n        styles.inputContainer,\n        inputContainerStyle,\n        inputContainerStyleOverrides,\n      ],\n    };\n\n    let lineProps = {\n      type: disabledLineType,\n      width: disabledLineWidth,\n      color: baseColor,\n    };\n\n    let labelProps = {\n      baseSize: labelHeight,\n      basePadding: labelPadding,\n      fontSize,\n      activeFontSize: labelFontSize,\n      tintColor,\n      baseColor,\n      errorColor,\n      animationDuration,\n      active,\n      focused,\n      errored,\n      restricted,\n      style: labelTextStyle,\n    };\n\n    let counterProps = {\n      baseColor,\n      errorColor,\n      count,\n      limit,\n      fontSize: titleFontSize,\n      style: titleTextStyle,\n    };\n\n    return (\n      <View {...containerProps}>\n        <Animated.View {...inputContainerProps}>\n          {disabled && <Line {...lineProps} />}\n\n          <Label {...labelProps}>{label}</Label>\n\n          <View style={styles.row}>\n            {this.renderAffix('prefix', active, focused)}\n\n            <TextInput\n              style={[styles.input, inputStyle, inputStyleOverrides]}\n              selectionColor={tintColor}\n\n              {...props}\n\n              editable={!disabled && editable}\n              onChange={this.onChange}\n              onChangeText={this.onChangeText}\n              onContentSizeChange={this.onContentSizeChange}\n              onFocus={this.onFocus}\n              onBlur={this.onBlur}\n              value={value}\n              ref={this.updateRef}\n            />\n\n            {this.renderAffix('suffix', active, focused)}\n            {this.renderAccessory()}\n          </View>\n        </Animated.View>\n\n        <Animated.View style={helperContainerStyle}>\n          <View style={styles.flex}>\n            <Helper style={[errorStyle, titleTextStyle]}>{error}</Helper>\n            <Helper style={[titleStyle, titleTextStyle]}>{title}</Helper>\n          </View>\n\n          <Counter {...counterProps} />\n        </Animated.View>\n      </View>\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}