{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { container } from \"react-native-web/dist/index\";\nimport React, { useEffect } from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport axios from \"axios\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar Home = function Home() {\n  console.log(\"in home\");\n\n  var fetchData = function fetchData() {\n    console.log(\"in home----------------------------\");\n    var baseURL = \"https://localhost:7162/api/Elevators\";\n    axios.get(\"\" + baseURL).then(function (response) {\n      console.log(\"in home8888888888888888888\");\n      console.log(response.data);\n    }).catch(function (err) {\n      return console.log(\"we have an error:\", err);\n    });\n  };\n\n  useEffect(function () {\n    fetchData();\n  }, []);\n\n  var Item = function Item(_ref) {\n    var item = _ref.item,\n        onPress = _ref.onPress,\n        backgroundColor = _ref.backgroundColor,\n        textColor = _ref.textColor;\n    return _jsx(TouchableOpacity, {\n      onPress: onPress,\n      style: [styles.item, backgroundColor],\n      children: _jsx(Text, {\n        style: [styles.title, textColor],\n        children: item.title\n      })\n    });\n  };\n\n  var App = function App() {\n    var _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        selectedId = _useState2[0],\n        setSelectedId = _useState2[1];\n\n    var renderItem = function renderItem(_ref2) {\n      var item = _ref2.item;\n      var backgroundColor = item.id === selectedId ? \"#6e3b6e\" : \"#f9c2ff\";\n      var color = item.id === selectedId ? \"white\" : \"black\";\n      return _jsx(Item, {\n        item: item,\n        onPress: function onPress() {\n          return setSelectedId(item.id);\n        },\n        backgroundColor: {\n          backgroundColor: backgroundColor\n        },\n        textColor: {\n          color: color\n        }\n      });\n    };\n\n    return _jsx(\"div\", {\n      children: _jsx(View, {\n        style: {\n          backgroundColor: \"red\",\n          height: \"100%\",\n          width: \"100%\"\n        },\n        children: _jsx(FlatList, {\n          data: [{\n            fetchData: fetchData\n          }],\n          renderItem: function renderItem(_ref3) {\n            var item = _ref3.item;\n            return _jsx(Text, {\n              children: item.name\n            });\n          },\n          keyExtractor: function keyExtractor(item, index) {\n            return index.toString();\n          }\n        })\n      })\n    });\n  };\n};\n\nexport default Home;","map":{"version":3,"names":["container","React","useEffect","NavigationContainer","axios","Home","console","log","fetchData","baseURL","get","then","response","data","catch","err","Item","item","onPress","backgroundColor","textColor","styles","title","App","useState","selectedId","setSelectedId","renderItem","id","color","height","width","name","index","toString"],"sources":["C:/Users/amara/OneDrive/Desktop/Front-end/Rocket-Elevators-Mobile-React-Native/my-app/src/screens/Home.js"],"sourcesContent":["import { View, Text, Button, FlatList, container } from \"react-native\";\r\nimport React, { useEffect } from \"react\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\n// import SelectDropdown from \"react-native-material-dropdown\";\r\nimport axios from \"axios\";\r\n\r\nconst Home = () => {\r\n    console.log(\"in home\");\r\n    const fetchData = () => {\r\n        console.log(\"in home----------------------------\");\r\n        const baseURL = \"https://localhost:7162/api/Elevators\";\r\n\r\n        axios\r\n            .get(`${baseURL}`)\r\n            .then((response) => {\r\n                console.log(\"in home8888888888888888888\");\r\n                console.log(response.data);\r\n            })\r\n            .catch((err) => console.log(\"we have an error:\", err));\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, []);\r\n\r\n    const Item = ({ item, onPress, backgroundColor, textColor }) => (\r\n        <TouchableOpacity onPress={onPress} style={[styles.item, backgroundColor]}>\r\n            <Text style={[styles.title, textColor]}>{item.title}</Text>\r\n        </TouchableOpacity>\r\n    );\r\n    const App = () => {\r\n        const [selectedId, setSelectedId] = useState(null);\r\n\r\n        const renderItem = ({ item }) => {\r\n            const backgroundColor = item.id === selectedId ? \"#6e3b6e\" : \"#f9c2ff\";\r\n            const color = item.id === selectedId ? \"white\" : \"black\";\r\n            return <Item item={item} onPress={() => setSelectedId(item.id)} backgroundColor={{ backgroundColor }} textColor={{ color }} />;\r\n        };\r\n        // Item;\r\n\r\n        return (\r\n            <div>\r\n                {/* <h1>{fetchData}</h1> */}\r\n                {/* <select value={fetchData} onChange> */}\r\n                {/* </select> */}\r\n                <View style={{ backgroundColor: \"red\", height: \"100%\", width: \"100%\" }}>\r\n                    <FlatList\r\n                        data={[{ fetchData }]}\r\n                        renderItem={({ item }) => <Text>{item.name}</Text>}\r\n                        keyExtractor={(item, index) => index.toString()}\r\n                    />\r\n\r\n                    {/* <FlatList data={[fetchData]}> Liste of Elevator </FlatList> */}\r\n                    {/* <getMoviesFromApi /> */}\r\n                    {/* <FlatList data={[fetchData]} /> */}\r\n                </View>\r\n            </div>\r\n        );\r\n    };\r\n};\r\nexport default Home;\r\n"],"mappings":";;;;;SAAuCA,S;AACvC,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;EACfC,OAAO,CAACC,GAAR,CAAY,SAAZ;;EACA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;IACpBF,OAAO,CAACC,GAAR,CAAY,qCAAZ;IACA,IAAME,OAAO,GAAG,sCAAhB;IAEAL,KAAK,CACAM,GADL,MACYD,OADZ,EAEKE,IAFL,CAEU,UAACC,QAAD,EAAc;MAChBN,OAAO,CAACC,GAAR,CAAY,4BAAZ;MACAD,OAAO,CAACC,GAAR,CAAYK,QAAQ,CAACC,IAArB;IACH,CALL,EAMKC,KANL,CAMW,UAACC,GAAD;MAAA,OAAST,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCQ,GAAjC,CAAT;IAAA,CANX;EAOH,CAXD;;EAaAb,SAAS,CAAC,YAAM;IACZM,SAAS;EACZ,CAFQ,EAEN,EAFM,CAAT;;EAIA,IAAMQ,IAAI,GAAG,SAAPA,IAAO;IAAA,IAAGC,IAAH,QAAGA,IAAH;IAAA,IAASC,OAAT,QAASA,OAAT;IAAA,IAAkBC,eAAlB,QAAkBA,eAAlB;IAAA,IAAmCC,SAAnC,QAAmCA,SAAnC;IAAA,OACT,KAAC,gBAAD;MAAkB,OAAO,EAAEF,OAA3B;MAAoC,KAAK,EAAE,CAACG,MAAM,CAACJ,IAAR,EAAcE,eAAd,CAA3C;MAAA,UACI,KAAC,IAAD;QAAM,KAAK,EAAE,CAACE,MAAM,CAACC,KAAR,EAAeF,SAAf,CAAb;QAAA,UAAyCH,IAAI,CAACK;MAA9C;IADJ,EADS;EAAA,CAAb;;EAKA,IAAMC,GAAG,GAAG,SAANA,GAAM,GAAM;IACd,gBAAoCC,QAAQ,CAAC,IAAD,CAA5C;IAAA;IAAA,IAAOC,UAAP;IAAA,IAAmBC,aAAnB;;IAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,QAAc;MAAA,IAAXV,IAAW,SAAXA,IAAW;MAC7B,IAAME,eAAe,GAAGF,IAAI,CAACW,EAAL,KAAYH,UAAZ,GAAyB,SAAzB,GAAqC,SAA7D;MACA,IAAMI,KAAK,GAAGZ,IAAI,CAACW,EAAL,KAAYH,UAAZ,GAAyB,OAAzB,GAAmC,OAAjD;MACA,OAAO,KAAC,IAAD;QAAM,IAAI,EAAER,IAAZ;QAAkB,OAAO,EAAE;UAAA,OAAMS,aAAa,CAACT,IAAI,CAACW,EAAN,CAAnB;QAAA,CAA3B;QAAyD,eAAe,EAAE;UAAET,eAAe,EAAfA;QAAF,CAA1E;QAA+F,SAAS,EAAE;UAAEU,KAAK,EAALA;QAAF;MAA1G,EAAP;IACH,CAJD;;IAOA,OACI;MAAA,UAII,KAAC,IAAD;QAAM,KAAK,EAAE;UAAEV,eAAe,EAAE,KAAnB;UAA0BW,MAAM,EAAE,MAAlC;UAA0CC,KAAK,EAAE;QAAjD,CAAb;QAAA,UACI,KAAC,QAAD;UACI,IAAI,EAAE,CAAC;YAAEvB,SAAS,EAATA;UAAF,CAAD,CADV;UAEI,UAAU,EAAE;YAAA,IAAGS,IAAH,SAAGA,IAAH;YAAA,OAAc,KAAC,IAAD;cAAA,UAAOA,IAAI,CAACe;YAAZ,EAAd;UAAA,CAFhB;UAGI,YAAY,EAAE,sBAACf,IAAD,EAAOgB,KAAP;YAAA,OAAiBA,KAAK,CAACC,QAAN,EAAjB;UAAA;QAHlB;MADJ;IAJJ,EADJ;EAkBH,CA5BD;AA6BH,CArDD;;AAsDA,eAAe7B,IAAf"},"metadata":{},"sourceType":"module"}