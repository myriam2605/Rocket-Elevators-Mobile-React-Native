{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { container } from \"react-native-web/dist/index\";\nimport React, { useEffect } from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport axios from \"axios\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar fetchData = function fetchData() {\n  console.log(\"in home----------------------------\");\n  var baseURL = \"https://localhost:7162/api/Elevators\";\n  axios.get(\"\" + baseURL).then(function (response) {\n    console.log(\"in home8888888888888888888\");\n    console.log(response.data);\n  }).catch(function (err) {\n    return console.log(\"we have an error:\", err);\n  });\n};\n\nuseEffect(function () {\n  fetchData();\n}, []);\n\nvar App = function App() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedId = _useState2[0],\n      setSelectedId = _useState2[1];\n\n  var renderItem = function renderItem(_ref) {\n    var item = _ref.item;\n    var backgroundColor = item.id === selectedId ? \"#6e3b6e\" : \"#f9c2ff\";\n    var color = item.id === selectedId ? \"white\" : \"black\";\n    return _jsx(Item, {\n      item: item,\n      onPress: function onPress() {\n        return setSelectedId(item.id);\n      },\n      backgroundColor: {\n        backgroundColor: backgroundColor\n      },\n      textColor: {\n        color: color\n      }\n    });\n  };\n\n  return _jsx(SafeAreaView, {\n    style: styles.container,\n    children: _jsx(FlatList, {\n      data: DATA,\n      renderItem: renderItem,\n      keyExtractor: function keyExtractor(item) {\n        return item.id;\n      },\n      extraData: selectedId\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: StatusBar.currentHeight || 0\n  },\n  item: {\n    padding: 20,\n    marginVertical: 8,\n    marginHorizontal: 16\n  },\n  title: {\n    fontSize: 32\n  }\n});\nexport default App;","map":{"version":3,"names":["container","React","useEffect","NavigationContainer","axios","fetchData","console","log","baseURL","get","then","response","data","catch","err","App","useState","selectedId","setSelectedId","renderItem","item","backgroundColor","id","color","styles","DATA","StyleSheet","create","flex","marginTop","StatusBar","currentHeight","padding","marginVertical","marginHorizontal","title","fontSize"],"sources":["C:/Users/amara/OneDrive/Desktop/Front-end/Rocket-Elevators-Mobile-React-Native/my-app/src/screens/Home.js"],"sourcesContent":["import { View, Text, Button, FlatList, container } from \"react-native\";\r\nimport React, { useEffect } from \"react\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\n// import SelectDropdown from \"react-native-material-dropdown\";\r\nimport axios from \"axios\";\r\n\r\n// const Home = () => {\r\n//     console.log(\"in home\");\r\nconst fetchData = () => {\r\n    console.log(\"in home----------------------------\");\r\n    const baseURL = \"https://localhost:7162/api/Elevators\";\r\n\r\n    axios\r\n        .get(`${baseURL}`)\r\n        .then((response) => {\r\n            console.log(\"in home8888888888888888888\");\r\n            console.log(response.data);\r\n        })\r\n        .catch((err) => console.log(\"we have an error:\", err));\r\n};\r\n\r\nuseEffect(() => {\r\n    fetchData();\r\n}, []);\r\n\r\n//     const Item = ({ item, onPress, backgroundColor, textColor }) => (\r\n//         <TouchableOpacity onPress={onPress} style={[styles.item, backgroundColor]}>\r\n//             <Text style={[styles.title, textColor]}>{item.title}</Text>\r\n//         </TouchableOpacity>\r\n//     );\r\n\r\nconst App = () => {\r\n    const [selectedId, setSelectedId] = useState(null);\r\n\r\n    const renderItem = ({ item }) => {\r\n        const backgroundColor = item.id === selectedId ? \"#6e3b6e\" : \"#f9c2ff\";\r\n        const color = item.id === selectedId ? \"white\" : \"black\";\r\n\r\n        return <Item item={item} onPress={() => setSelectedId(item.id)} backgroundColor={{ backgroundColor }} textColor={{ color }} />;\r\n    };\r\n\r\n    return (\r\n        <SafeAreaView style={styles.container}>\r\n            <FlatList data={DATA} renderItem={renderItem} keyExtractor={(item) => item.id} extraData={selectedId} />\r\n        </SafeAreaView>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        marginTop: StatusBar.currentHeight || 0,\r\n    },\r\n    item: {\r\n        padding: 20,\r\n        marginVertical: 8,\r\n        marginHorizontal: 16,\r\n    },\r\n    title: {\r\n        fontSize: 32,\r\n    },\r\n});\r\n\r\n// Item;\r\n\r\n// return (\r\n//     <div>\r\n//         {/* <h1>{fetchData}</h1> */}\r\n//         {/* <select value={fetchData} onChange> */}\r\n//         {/* </select> */}\r\n//         <View style={{ backgroundColor: \"red\", height: \"100%\", width: \"100%\" }}>\r\n//             <FlatList\r\n//                 data={[{ fetchData }]}\r\n//                 renderItem={({ item }) => <Text>{item.name}</Text>}\r\n//                 keyExtractor={(item, index) => index.toString()}\r\n//             />\r\n\r\n//             {/* <FlatList data={[fetchData]}> Liste of Elevator </FlatList> */}\r\n//             {/* <getMoviesFromApi /> */}\r\n//             {/* <FlatList data={[fetchData]} /> */}\r\n//         </View>\r\n//     </div>\r\n// );\r\n// };\r\n\r\nexport default App;\r\n"],"mappings":";;;;;SAAuCA,S;AACvC,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;;AAIA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;EACpBC,OAAO,CAACC,GAAR,CAAY,qCAAZ;EACA,IAAMC,OAAO,GAAG,sCAAhB;EAEAJ,KAAK,CACAK,GADL,MACYD,OADZ,EAEKE,IAFL,CAEU,UAACC,QAAD,EAAc;IAChBL,OAAO,CAACC,GAAR,CAAY,4BAAZ;IACAD,OAAO,CAACC,GAAR,CAAYI,QAAQ,CAACC,IAArB;EACH,CALL,EAMKC,KANL,CAMW,UAACC,GAAD;IAAA,OAASR,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCO,GAAjC,CAAT;EAAA,CANX;AAOH,CAXD;;AAaAZ,SAAS,CAAC,YAAM;EACZG,SAAS;AACZ,CAFQ,EAEN,EAFM,CAAT;;AAUA,IAAMU,GAAG,GAAG,SAANA,GAAM,GAAM;EACd,gBAAoCC,QAAQ,CAAC,IAAD,CAA5C;EAAA;EAAA,IAAOC,UAAP;EAAA,IAAmBC,aAAnB;;EAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAAc;IAAA,IAAXC,IAAW,QAAXA,IAAW;IAC7B,IAAMC,eAAe,GAAGD,IAAI,CAACE,EAAL,KAAYL,UAAZ,GAAyB,SAAzB,GAAqC,SAA7D;IACA,IAAMM,KAAK,GAAGH,IAAI,CAACE,EAAL,KAAYL,UAAZ,GAAyB,OAAzB,GAAmC,OAAjD;IAEA,OAAO,KAAC,IAAD;MAAM,IAAI,EAAEG,IAAZ;MAAkB,OAAO,EAAE;QAAA,OAAMF,aAAa,CAACE,IAAI,CAACE,EAAN,CAAnB;MAAA,CAA3B;MAAyD,eAAe,EAAE;QAAED,eAAe,EAAfA;MAAF,CAA1E;MAA+F,SAAS,EAAE;QAAEE,KAAK,EAALA;MAAF;IAA1G,EAAP;EACH,CALD;;EAOA,OACI,KAAC,YAAD;IAAc,KAAK,EAAEC,MAAM,CAACxB,SAA5B;IAAA,UACI,KAAC,QAAD;MAAU,IAAI,EAAEyB,IAAhB;MAAsB,UAAU,EAAEN,UAAlC;MAA8C,YAAY,EAAE,sBAACC,IAAD;QAAA,OAAUA,IAAI,CAACE,EAAf;MAAA,CAA5D;MAA+E,SAAS,EAAEL;IAA1F;EADJ,EADJ;AAKH,CAfD;;AAiBA,IAAMO,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;EAC7B3B,SAAS,EAAE;IACP4B,IAAI,EAAE,CADC;IAEPC,SAAS,EAAEC,SAAS,CAACC,aAAV,IAA2B;EAF/B,CADkB;EAK7BX,IAAI,EAAE;IACFY,OAAO,EAAE,EADP;IAEFC,cAAc,EAAE,CAFd;IAGFC,gBAAgB,EAAE;EAHhB,CALuB;EAU7BC,KAAK,EAAE;IACHC,QAAQ,EAAE;EADP;AAVsB,CAAlB,CAAf;AAqCA,eAAerB,GAAf"},"metadata":{},"sourceType":"module"}