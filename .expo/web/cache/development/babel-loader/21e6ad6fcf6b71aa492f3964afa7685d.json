{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport axios from \"axios\";\nimport React, { useState } from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar Data = function Data() {\n  console.log(\"in home\");\n\n  var fetchData = function fetchData() {\n    console.log(\"in home----------------------------\");\n    var baseURL = \"https://localhost:7162/api/Elevators\";\n    axios.get(\"\" + baseURL).then(function (response) {\n      console.log(\"in home8888888888888888888\");\n      console.log(response.data);\n    }).catch(function (err) {\n      return console.log(\"we have an error:\", err);\n    });\n  };\n\n  useEffect(function () {}, []);\n\n  var Item = function Item(_ref) {\n    var item = _ref.item,\n        onPress = _ref.onPress,\n        backgroundColor = _ref.backgroundColor,\n        textColor = _ref.textColor;\n    return _jsx(TouchableOpacity, {\n      onPress: onPress,\n      style: [styles.item, backgroundColor],\n      children: _jsx(Text, {\n        style: [styles.title, textColor],\n        children: item.title\n      })\n    });\n  };\n\n  var App = function App() {\n    var _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        selectedId = _useState2[0],\n        setSelectedId = _useState2[1];\n\n    var renderItem = function renderItem(_ref2) {\n      var item = _ref2.item;\n      var backgroundColor = item.id === selectedId ? \"#6e3b6e\" : \"#f9c2ff\";\n      var color = item.id === selectedId ? \"white\" : \"black\";\n      return _jsx(Item, {\n        item: item,\n        onPress: function onPress() {\n          return setSelectedId(item.id);\n        },\n        backgroundColor: {\n          backgroundColor: backgroundColor\n        },\n        textColor: {\n          color: color\n        }\n      });\n    };\n\n    return _jsx(SafeAreaView, {\n      style: styles.container,\n      children: _jsx(FlatList, {\n        data: DATA,\n        renderItem: renderItem,\n        keyExtractor: function keyExtractor(item) {\n          return item.id;\n        },\n        extraData: selectedId\n      })\n    });\n  };\n\n  var styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      marginTop: StatusBar.currentHeight || 0\n    },\n    item: {\n      padding: 20,\n      marginVertical: 8,\n      marginHorizontal: 16\n    },\n    title: {\n      fontSize: 32\n    }\n  });\n};\n\nexport default App;","map":{"version":3,"names":["axios","React","useState","Data","console","log","fetchData","baseURL","get","then","response","data","catch","err","useEffect","Item","item","onPress","backgroundColor","textColor","styles","title","App","selectedId","setSelectedId","renderItem","id","color","container","DATA","StyleSheet","create","flex","marginTop","StatusBar","currentHeight","padding","marginVertical","marginHorizontal","fontSize"],"sources":["C:/Users/amara/OneDrive/Desktop/Front-end/Rocket-Elevators-Mobile-React-Native/my-app/src/screens/Home.js"],"sourcesContent":["// import { View, Text, Button, FlatList, container } from \"react-native\";\r\n// import React, { useEffect } from \"react\";\r\n// import { NavigationContainer } from \"@react-navigation/native\";\r\n// import SelectDropdown from \"react-native-material-dropdown\";\r\nimport axios from \"axios\";\r\n\r\nimport React, { useState } from \"react\";\r\nimport { FlatList, SafeAreaView, StatusBar, StyleSheet, Text, TouchableOpacity } from \"react-native\";\r\n\r\nconst Data = () => {\r\n    console.log(\"in home\");\r\n    const fetchData = () => {\r\n        console.log(\"in home----------------------------\");\r\n        const baseURL = \"https://localhost:7162/api/Elevators\";\r\n\r\n        axios\r\n            .get(`${baseURL}`)\r\n            .then((response) => {\r\n                console.log(\"in home8888888888888888888\");\r\n                console.log(response.data);\r\n            })\r\n            .catch((err) => console.log(\"we have an error:\", err));\r\n    };\r\n\r\n    useEffect(() => {\r\n        // fetchData();\r\n    }, []);\r\n\r\n    //     const Item = ({ item, onPress, backgroundColor, textColor }) => (\r\n    //         <TouchableOpacity onPress={onPress} style={[styles.item, backgroundColor]}>\r\n    //             <Text style={[styles.title, textColor]}>{item.title}</Text>\r\n    //         </TouchableOpacity>\r\n    //     );\r\n    //     const App = () => {\r\n    //         const [selectedId, setSelectedId] = useState(null);\r\n\r\n    //         const renderItem = ({ item }) => {\r\n    //             const backgroundColor = item.id === selectedId ? \"#6e3b6e\" : \"#f9c2ff\";\r\n    //             const color = item.id === selectedId ? \"white\" : \"black\";\r\n    //             return <Item item={item} onPress={() => setSelectedId(item.id)} backgroundColor={{ backgroundColor }} textColor={{ color }} />;\r\n    //         };\r\n    //         // Item;\r\n\r\n    //         return (\r\n    //             <div>\r\n    //                 {/* <h1>{fetchData}</h1> */}\r\n    //                 {/* <select value={fetchData} onChange> */}\r\n    //                 {/* </select> */}\r\n    //                 <View style={{ backgroundColor: \"red\", height: \"100%\", width: \"100%\" }}>\r\n    //                     <FlatList\r\n    //                         data={[{ fetchData }]}\r\n    //                         renderItem={({ item }) => <Text>{item.name}</Text>}\r\n    //                         keyExtractor={(item, index) => index.toString()}\r\n    //                     />\r\n\r\n    //                     {/* <FlatList data={[fetchData]}> Liste of Elevator </FlatList> */}\r\n    //                     {/* <getMoviesFromApi /> */}\r\n    //                     {/* <FlatList data={[fetchData]} /> */}\r\n    //                 </View>\r\n    //             </div>\r\n    //         );\r\n    //     };\r\n    // };\r\n    // export default App;\r\n\r\n    const Item = ({ item, onPress, backgroundColor, textColor }) => (\r\n        <TouchableOpacity onPress={onPress} style={[styles.item, backgroundColor]}>\r\n            <Text style={[styles.title, textColor]}>{item.title}</Text>\r\n        </TouchableOpacity>\r\n    );\r\n\r\n    const App = () => {\r\n        const [selectedId, setSelectedId] = useState(null);\r\n\r\n        const renderItem = ({ item }) => {\r\n            const backgroundColor = item.id === selectedId ? \"#6e3b6e\" : \"#f9c2ff\";\r\n            const color = item.id === selectedId ? \"white\" : \"black\";\r\n\r\n            return <Item item={item} onPress={() => setSelectedId(item.id)} backgroundColor={{ backgroundColor }} textColor={{ color }} />;\r\n        };\r\n\r\n        return (\r\n            <SafeAreaView style={styles.container}>\r\n                <FlatList data={DATA} renderItem={renderItem} keyExtractor={(item) => item.id} extraData={selectedId} />\r\n            </SafeAreaView>\r\n        );\r\n    };\r\n\r\n    const styles = StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n            marginTop: StatusBar.currentHeight || 0,\r\n        },\r\n        item: {\r\n            padding: 20,\r\n            marginVertical: 8,\r\n            marginHorizontal: 16,\r\n        },\r\n        title: {\r\n            fontSize: 32,\r\n        },\r\n    });\r\n};\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}