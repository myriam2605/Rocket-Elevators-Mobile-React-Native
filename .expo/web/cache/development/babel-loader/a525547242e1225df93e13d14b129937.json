{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport React, { useContext, useState, useEffect } from \"react\";\nimport CustomInput from \"../components/CustomInput\";\nimport CustomButton from \"../components/CustomButton\";\nimport axios from \"axios\";\nimport Home from \"./Home\";\nimport { ScreenStackHeaderLeftView } from \"react-native-screens\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Login = function Login(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useWindowDimensions = useWindowDimensions(),\n      height = _useWindowDimensions.height;\n\n  var fetchData = function _callee() {\n    var baseURL;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            baseURL = \"https://localhost:7162/api/Users/email/\" + email;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(axios.get(\"\" + baseURL));\n\n          case 3:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var validationEmail = function _callee2() {\n    var listEmails, createTwoButtonAlert;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(fetchData());\n\n          case 2:\n            listEmails = _context2.sent;\n            console.log(listEmails.data);\n\n            if (listEmails.data) {\n              navigation.navigate(\"Home\");\n            } else {\n              createTwoButtonAlert = function createTwoButtonAlert() {\n                return Alert.alert(\"Alert Title\", \"My Alert Msg\", [{\n                  text: \"Cancel\",\n                  onPress: function onPress() {\n                    return console.log(\"Cancel Pressed\");\n                  },\n                  style: \"cancel\"\n                }, {\n                  text: \"OK\",\n                  onPress: function onPress() {\n                    return console.log(\"OK Pressed\");\n                  }\n                }]);\n              };\n\n              createTwoButtonAlert;\n            }\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsxs(View, {\n    style: styles.root,\n    children: [_jsx(CustomInput, {\n      placeholder: \"Enter your Email\",\n      value: email,\n      setValue: setEmail,\n      onChangeText: function onChangeText(text) {\n        return setEmail(text);\n      }\n    }), _jsx(CustomButton, {\n      text: \"Login\",\n      onPress: validationEmail\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  root: {\n    alignItems: \"center\",\n    padding: 20\n  },\n  logo: {\n    maxWidth: 300,\n    width: 300,\n    maxHeight: 200\n  }\n});\nexport default Login;","map":{"version":3,"names":["React","useContext","useState","useEffect","CustomInput","CustomButton","axios","Home","ScreenStackHeaderLeftView","Login","navigation","email","setEmail","useWindowDimensions","height","fetchData","baseURL","get","validationEmail","listEmails","console","log","data","navigate","createTwoButtonAlert","Alert","alert","text","onPress","style","styles","root","StyleSheet","create","alignItems","padding","logo","maxWidth","width","maxHeight"],"sources":["C:/Users/amara/OneDrive/Desktop/Front-end/Rocket-Elevators-Mobile-React-Native/my-app/src/screens/Login.js"],"sourcesContent":["import { View, Text, Image, StyleSheet, useWindowDimensions } from \"react-native\";\r\nimport React, { useContext, useState, useEffect } from \"react\";\r\n// import Logo from \"../../Logo/R2.png\";\r\nimport CustomInput from \"../components/CustomInput\";\r\nimport CustomButton from \"../components/CustomButton\";\r\n\r\n// import { AuthContext } from \"../components/AuthContext\";\r\n\r\nimport axios from \"axios\";\r\nimport Home from \"./Home\";\r\nimport { ScreenStackHeaderLeftView } from \"react-native-screens\";\r\n\r\nconst Login = ({ navigation }) => {\r\n    const [email, setEmail] = useState(\"\");\r\n    // const [password, setPassword] = useState(\"\");\r\n\r\n    const { height } = useWindowDimensions();\r\n\r\n    // const getMoviesFromApiAsync = async () => {\r\n    //     try {\r\n    //         const response = await fetch(\"https://reactnative.dev/movies.json\");\r\n    //         const json = await response.json();\r\n    //         console.log(\"json:\", json);\r\n    //         return json.movies;\r\n    //     } catch (error) {\r\n    //         console.error(\"failed to fetch:\", error);\r\n    //     }\r\n    // };\r\n\r\n    // getMoviesFromApiAsync();\r\n\r\n    const fetchData = async () => {\r\n        const baseURL = `https://localhost:7162/api/Users/email/${email}`;\r\n        return await axios.get(`${baseURL}`);\r\n        // axios\r\n        //     .get(`${baseURL}`)\r\n        //     .then((response) => {\r\n        //         console.log(response.data);\r\n        //         return response.data;\r\n        //     })\r\n        //     .catch((err) => {\r\n        //         console.log(\"we have an error:\", err);\r\n        //         return false;\r\n        //     });\r\n    };\r\n\r\n    // useEffect(() => {\r\n    //     fetchData();\r\n    // }, []);\r\n\r\n    //const val = useContext(AuthContext);\r\n\r\n    // const onSignInPressed = () => {\r\n    //     console.warn(\"Sign in\");\r\n    // };\r\n\r\n    // const onForgotPasswordPressed = () => {\r\n    //     console.warn(\"onForgotPasswordPressed\");\r\n    // };\r\n\r\n    const validationEmail = async () => {\r\n        const listEmails = await fetchData();\r\n        console.log(listEmails.data);\r\n        // regarder email input si dans la liste\r\n        if (listEmails.data) {\r\n            navigation.navigate(\"Home\");\r\n        } else {\r\n            const createTwoButtonAlert = () =>\r\n                // console.log(\"we have an error:\", err);\r\n                Alert.alert(\"Alert Title\", \"My Alert Msg\", [\r\n                    {\r\n                        text: \"Cancel\",\r\n                        onPress: () => console.log(\"Cancel Pressed\"),\r\n                        style: \"cancel\",\r\n                    },\r\n                    { text: \"OK\", onPress: () => console.log(\"OK Pressed\") },\r\n                ]);\r\n            createTwoButtonAlert;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <View style={styles.root}>\r\n            {/* <Image source={Logo} style={[styles.logo, { height: height * 0.3 }]} resizeMode=\"contain\" /> */}\r\n            <CustomInput placeholder=\"Enter your Email\" value={email} setValue={setEmail} onChangeText={(text) => setEmail(text)} />\r\n\r\n            <CustomButton text=\"Login\" onPress={validationEmail} />\r\n            {/* => navigation.navigate(\"home\") */}\r\n        </View>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    root: {\r\n        alignItems: \"center\",\r\n        padding: 20,\r\n    },\r\n    logo: {\r\n        maxWidth: 300,\r\n        width: 300,\r\n        maxHeight: 200,\r\n    },\r\n});\r\n\r\nexport default Login;\r\n"],"mappings":";;;;;;;AACA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD;AAEA,OAAOC,WAAP;AACA,OAAOC,YAAP;AAIA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP;AACA,SAASC,yBAAT,QAA0C,sBAA1C;;;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAoB;EAAA,IAAjBC,UAAiB,QAAjBA,UAAiB;;EAC9B,gBAA0BR,QAAQ,CAAC,EAAD,CAAlC;EAAA;EAAA,IAAOS,KAAP;EAAA,IAAcC,QAAd;;EAGA,2BAAmBC,mBAAmB,EAAtC;EAAA,IAAQC,MAAR,wBAAQA,MAAR;;EAeA,IAAMC,SAAS,GAAG;IAAA;IAAA;MAAA;QAAA;UAAA;YACRC,OADQ,+CAC4CL,KAD5C;YAAA;YAAA,iCAEDL,KAAK,CAACW,GAAN,MAAaD,OAAb,CAFC;;UAAA;YAAA;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAlB;;EA6BA,IAAME,eAAe,GAAG;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,iCACKH,SAAS,EADd;;UAAA;YACdI,UADc;YAEpBC,OAAO,CAACC,GAAR,CAAYF,UAAU,CAACG,IAAvB;;YAEA,IAAIH,UAAU,CAACG,IAAf,EAAqB;cACjBZ,UAAU,CAACa,QAAX,CAAoB,MAApB;YACH,CAFD,MAEO;cACGC,oBADH,GAC0B,SAAvBA,oBAAuB;gBAAA,OAEzBC,KAAK,CAACC,KAAN,CAAY,aAAZ,EAA2B,cAA3B,EAA2C,CACvC;kBACIC,IAAI,EAAE,QADV;kBAEIC,OAAO,EAAE;oBAAA,OAAMR,OAAO,CAACC,GAAR,CAAY,gBAAZ,CAAN;kBAAA,CAFb;kBAGIQ,KAAK,EAAE;gBAHX,CADuC,EAMvC;kBAAEF,IAAI,EAAE,IAAR;kBAAcC,OAAO,EAAE;oBAAA,OAAMR,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;kBAAA;gBAAvB,CANuC,CAA3C,CAFyB;cAAA,CAD1B;;cAWHG,oBAAoB;YACvB;;UAlBmB;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAxB;;EAqBA,OACI,MAAC,IAAD;IAAM,KAAK,EAAEM,MAAM,CAACC,IAApB;IAAA,WAEI,KAAC,WAAD;MAAa,WAAW,EAAC,kBAAzB;MAA4C,KAAK,EAAEpB,KAAnD;MAA0D,QAAQ,EAAEC,QAApE;MAA8E,YAAY,EAAE,sBAACe,IAAD;QAAA,OAAUf,QAAQ,CAACe,IAAD,CAAlB;MAAA;IAA5F,EAFJ,EAII,KAAC,YAAD;MAAc,IAAI,EAAC,OAAnB;MAA2B,OAAO,EAAET;IAApC,EAJJ;EAAA,EADJ;AASH,CA9ED;;AAgFA,IAAMY,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;EAC7BF,IAAI,EAAE;IACFG,UAAU,EAAE,QADV;IAEFC,OAAO,EAAE;EAFP,CADuB;EAK7BC,IAAI,EAAE;IACFC,QAAQ,EAAE,GADR;IAEFC,KAAK,EAAE,GAFL;IAGFC,SAAS,EAAE;EAHT;AALuB,CAAlB,CAAf;AAYA,eAAe9B,KAAf"},"metadata":{},"sourceType":"module"}